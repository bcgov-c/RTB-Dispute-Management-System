using CM.Data.Repositories.Amendment;
using CM.Data.Repositories.AuditLogs;
using CM.Data.Repositories.AutoText;
using CM.Data.Repositories.BulkEmailRecipient;
using CM.Data.Repositories.Claim;
using CM.Data.Repositories.CmsArchive;
using CM.Data.Repositories.ConferenceBridge;
using CM.Data.Repositories.CustomConfigObject;
using CM.Data.Repositories.CustomDataObject;
using CM.Data.Repositories.Dispute;
using CM.Data.Repositories.DisputeFlag;
using CM.Data.Repositories.DisputeHearing;
using CM.Data.Repositories.DisputeProcessDetail;
using CM.Data.Repositories.DisputeVerification;
using CM.Data.Repositories.EmailAttachment;
using CM.Data.Repositories.EmailMessage;
using CM.Data.Repositories.EmailTemplate;
using CM.Data.Repositories.ExternalCustomDataObject;
using CM.Data.Repositories.ExternalErrorLog;
using CM.Data.Repositories.ExternalFile;
using CM.Data.Repositories.FilePackageService;
using CM.Data.Repositories.Files;
using CM.Data.Repositories.Hearings;
using CM.Data.Repositories.IntakeQuestions;
using CM.Data.Repositories.InternalUserProfile;
using CM.Data.Repositories.InternalUserRole;
using CM.Data.Repositories.Maintenance;
using CM.Data.Repositories.Notes;
using CM.Data.Repositories.Notice;
using CM.Data.Repositories.OnlineMeeting;
using CM.Data.Repositories.OutcomeDocRequest;
using CM.Data.Repositories.OutcomeDocument;
using CM.Data.Repositories.Parties;
using CM.Data.Repositories.Payment;
using CM.Data.Repositories.Poll;
using CM.Data.Repositories.Remedy;
using CM.Data.Repositories.Role;
using CM.Data.Repositories.ScheduleBlock;
using CM.Data.Repositories.SchedulePeriod;
using CM.Data.Repositories.ScheduleRequest;
using CM.Data.Repositories.Search;
using CM.Data.Repositories.ServiceAuditLog;
using CM.Data.Repositories.SiteVersion;
using CM.Data.Repositories.SubmissionReceipt;
using CM.Data.Repositories.SubstitutedService;
using CM.Data.Repositories.Task;
using CM.Data.Repositories.Token;
using CM.Data.Repositories.Trial;
using CM.Data.Repositories.TrialDispute;
using CM.Data.Repositories.TrialIntervention;
using CM.Data.Repositories.TrialOutcome;
using CM.Data.Repositories.TrialParticipant;
using CM.Data.Repositories.UnitOfWork;
using CM.Data.Repositories.User;
using CM.Data.Repositories.VerificationAttempt;
using CM.Data.Repositories.WorkflowReports;
using Microsoft.Extensions.DependencyInjection;

namespace CM.WebAPI;

public static partial class CustomExtensionsMethods
{
    public static IServiceCollection AddRepositories(this IServiceCollection services)
    {
        services.AddScoped<IUnitOfWork, UnitOfWork>();
        services.AddScoped<IDisputeRepository, DisputeRepository>();
        services.AddScoped<IDisputeProcessDetailRepository, DisputeProcessDetailRepository>();
        services.AddScoped<ITokenRepository, TokenRepository>();
        services.AddScoped<IDisputeUserRepository, DisputeUserRepository>();
        services.AddScoped<ISystemUserRepository, SystemUserRepository>();
        services.AddScoped<IRoleRepository, RoleRepository>();
        services.AddScoped<IIntakeQuestionsRepository, IntakeQuestionsRepository>();
        services.AddScoped<IAuditLogRepository, AuditLogRepository>();
        services.AddScoped<IParticipantRepository, ParticipantRepository>();
        services.AddScoped<IClaimGroupRepository, ClaimGroupRepository>();
        services.AddScoped<IClaimGroupParticipantRepository, ClaimGroupParticipantRepository>();
        services.AddScoped<IClaimRepository, ClaimRepository>();
        services.AddScoped<IClaimDetailRepository, ClaimDetailRepository>();
        services.AddScoped<IRemedyRepository, RemedyRepository>();
        services.AddScoped<IRemedyDetailRepository, RemedyDetailRepository>();
        services.AddScoped<IEmailMessageRepository, EmailMessageRepository>();
        services.AddScoped<IEmailAttachmentRepository, EmailAttachmentRepository>();
        services.AddScoped<IEmailTemplateRepository, EmailTemplateRepository>();
        services.AddScoped<IHearingParticipationRepository, HearingParticipationRepository>();
        services.AddScoped<IDisputeFeeRepository, DisputeFeeRepository>();
        services.AddScoped<IPaymentTransactionRepository, PaymentTransactionRepository>();
        services.AddScoped<ISearchRepository, SearchRepository>();
        services.AddScoped<ILinkedFileRepository, LinkedFileRepository>();
        services.AddScoped<ICommonFileRepository, CommonFileRepository>();
        services.AddScoped<IFileDescriptionRepository, FileDescriptionRepository>();
        services.AddScoped<INoticeRepository, NoticeRepository>();
        services.AddScoped<INoticeServiceRepository, NoticeServiceRepository>();
        services.AddScoped<IInternalUserRoleRepository, InternalUserRoleRepository>();
        services.AddScoped<IInternalUserProfileRepository, InternalUserProfileRepository>();
        services.AddScoped<IAmendmentRepository, AmendmentRepository>();
        services.AddScoped<INoteRepository, NoteRepository>();
        services.AddScoped<ITaskRepository, TaskRepository>();
        services.AddScoped<IMaintenanceRepository, MaintenanceRepository>();
        services.AddScoped<IFilePackageRepository, FilePackageRepository>();
        services.AddScoped<IFilePackageServiceRepository, FilePackageServiceRepository>();
        services.AddScoped<IOutcomeDocGroupRepository, OutcomeDocGroupRepository>();
        services.AddScoped<IOutcomeDocFileRepository, OutcomeDocFileRepository>();
        services.AddScoped<IOutcomeDocContentRepository, OutcomeDocContentRepository>();
        services.AddScoped<IOutcomeDocDeliveryRepository, OutcomeDocDeliveryRepository>();
        services.AddScoped<IAutoTextRepository, AutoTextRepository>();
        services.AddScoped<IDataModelRepository, DataModelRepository>();
        services.AddScoped<ICmsParticipantRepository, CmsParticipantRepository>();
        services.AddScoped<ICmsArchiveNoteRepository, CmsArchiveNoteRepository>();
        services.AddScoped<ICmsFileRepository, CmsFileRepository>();
        services.AddScoped<ICmsCorrectionRepository, CmsCorrectionRepository>();
        services.AddScoped<IConferenceBridgeRepository, ConferenceBridgeRepository>();
        services.AddScoped<IDisputeHearingRepository, DisputeHearingRepository>();
        services.AddScoped<IHearingRepository, HearingRepository>();
        services.AddScoped<IImportHearingRepository, ImportHearingRepository>();
        services.AddScoped<ISiteVersionRepository, SiteVersionRepository>();
        services.AddScoped<ISubstitutedServiceRepository, SubstitutedServiceRepository>();
        services.AddScoped<IWorkflowReportsRepository, WorkflowReportsRepository>();
        services.AddScoped<IBulkEmailRecipientRepository, BulkEmailRecipientRepository>();
        services.AddScoped<IHearingAuditLogRepository, HearingAuditLogRepository>();
        services.AddScoped<ICustomDataObjectRepository, CustomDataObjectRepository>();
        services.AddScoped<ISchedulePeriodRepository, SchedulePeriodRepository>();
        services.AddScoped<IScheduleBlockRepository, ScheduleBlockRepository>();
        services.AddScoped<IScheduleRequestRepository, ScheduleRequestRepository>();
        services.AddScoped<IOutcomeDocRequestRepository, OutcomeDocRequestRepository>();
        services.AddScoped<IOutcomeDocRequestItemRepository, OutcomeDocRequestItemRepository>();
        services.AddScoped<IDisputeFlagRepository, DisputeFlagRepository>();
        services.AddScoped<ISubmissionReceiptRepository, SubmissionReceiptRepository>();
        services.AddScoped<ITrialRepository, TrialRepository>();
        services.AddScoped<ITrialDisputeRepository, TrialDisputeRepository>();
        services.AddScoped<ITrialParticipantRepository, TrialParticipantRepository>();
        services.AddScoped<ITrialInterventionRepository, TrialInterventionRepository>();
        services.AddScoped<ITrialOutcomeRepository, TrialOutcomeRepository>();
        services.AddScoped<ICustomConfigObjectRepository, CustomConfigObjectRepository>();
        services.AddScoped<IExternalCustomDataObjectRepository, ExternalCustomDataObjectRepository>();
        services.AddScoped<IExternalFileRepository, ExternalFileRepository>();
        services.AddScoped<IServiceAuditLogRepository, ServiceAuditLogRepository>();
        services.AddScoped<IExternalErrorLogRepository, ExternalErrorLogRepository>();
        services.AddScoped<IPollRepository, PollRepository>();
        services.AddScoped<IPollResponseRepository, PollResponseRepository>();
        services.AddScoped<IOnlineMeetingRepository, OnlineMeetingRepository>();
        services.AddScoped<IDisputeVerificationRepository, DisputeVerificationRepository>();
        services.AddScoped<IVerificationAttemptRepository, VerificationAttemptRepository>();

        return services;
    }
}