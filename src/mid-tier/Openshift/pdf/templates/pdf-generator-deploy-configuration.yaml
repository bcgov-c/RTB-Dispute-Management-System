kind: Template
apiVersion: v1
metadata:
  name: ${NAME}
  annotations:
    openshift.io/display-name: Pdf Generator
    description: ${NAME} template
    tags: cm, rtb, dotnet
    iconClass: icon-dotnet
    template.openshift.io/provider-display-name: Red Hat, Inc.
message: |-
  The following service(s) have been created in your project: ${NAME}.
labels:
  template: ${NAME}
  app: "${NAME}"
objects:
- kind: Secret
  apiVersion: v1
  data:
    appsettings.json: >-
      ewogICAgIk1RIjogewogICAgICAiQ2x1c3RlciI6ICJob3N0PXJhYmJpdG1xLWNsdXN0ZXI7dXNlcm5hbWU9Z3Vlc3Q7cGFzc3dvcmQ9Z3Vlc3Q7cHVibGlzaGVyQ29uZmlybXM9dHJ1ZTt0aW1lb3V0PTEwIgogICAgfQp9
  metadata:
    name: secret-appsettings-pdf-generator
  type: Opaque

- kind: Service
  apiVersion: v1
  metadata:
    name: "${NAME}"
    annotations:
      description: Exposes and load balances the application pods
      service.alpha.openshift.io/dependencies: '[{"name": "${NAME}", "kind": "Service"}]'
  spec:
    ports:
    - name: web
      port: 8080
      targetPort: 8080
    selector:
      name: "${NAME}"


- kind: DeploymentConfig
  apiVersion: v1
  metadata:
    name: "${NAME}"
    annotations:
      description: Defines how to deploy the application server
  spec:
    strategy:
      type: Rolling
      rollingParams:
        updatePeriodSeconds: 1
        intervalSeconds: 1
        timeoutSeconds: 600
        maxUnavailable: 25%
        maxSurge: 25%
      resources: {}
    triggers:
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
        - ${NAME}
        from:
          kind: ImageStreamTag
          name: "${NAME}:${TAG}"
          namespace: "${TOOLS_NAMESPACE}"
    - type: ConfigChange
    replicas: 1
    selector:
      name: "${NAME}"
    template:
      metadata:
        name: "${NAME}"
        labels:
          name: "${NAME}"
      spec:
        containers:
        - name: ${NAME}
          ports:
          - containerPort: 8080
          image: >-
            docker-registry.default.svc:5000/${TOOLS_NAMESPACE}/${NAME}:${TAG}
          env:
          - name: ASPNETCORE_ENVIRONMENT
            value: "Staging"
          resources:
            limits:
              memory: "${MEMORY_LIMIT}"
          volumeMounts:
          - name: secrets
            mountPath: /app/secrets
            readOnly: true
          livenessProbe:
            httpGet:
              path: "api/health"
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            timeoutSeconds: 30
          readinessProbe:
            httpGet:
              path: "api/health"
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            timeoutSeconds: 30
        volumes:
        - name: secrets
          secret:
            secretName: secret-appsettings-pdf-generator
parameters:
- name: NAME
  displayName: Name
  description: The name assigned to all of the frontend objects defined in this template.
  required: true
  value: pdf-generator
- name: TAG
  displayName: Tag
  description: Specify tag name.
  required: true
  value: latest
- name: MEMORY_LIMIT
  displayName: Memory Limit
  required: true
  description: Maximum amount of memory the .NET Core container can use.
  value: 2Gi
- name: NAMESPACE
  displayName: Namespace
  required: true
  description: The OpenShift Namespace where the .NET builder ImageStream resides.
  value: openshift
- name: TOOLS_NAMESPACE
  displayName: Namespace
  description: The RTB Namespace where the ImageStream resides.
  required: true
  value: rtb-dms-tools
- name: APPLICATION_DOMAIN
  displayName: Application Hostname
  description: The exposed hostname that will route to the .NET Core service, if left blank a value will be defaulted.
  value: ''
