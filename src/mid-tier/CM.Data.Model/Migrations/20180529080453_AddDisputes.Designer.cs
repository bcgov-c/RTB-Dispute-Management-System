// <auto-generated />
using System;
using CM.Data.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace CM.Data.Model.Migrations
{
    [DbContext(typeof(CaseManagementContext))]
    [Migration("20180529080453_AddDisputes")]
    partial class AddDisputes
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.1.0-rc1-32029")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("CM.Data.Model.Dispute", b =>
                {
                    b.Property<int>("DisputeId")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("CreatedBy");

                    b.Property<DateTime?>("CreatedDate");

                    b.Property<byte?>("CreationMethod");

                    b.Property<Guid?>("CrossAppDisputeGuid");

                    b.Property<int?>("CrossAppFileNumber");

                    b.Property<Guid>("DisputeGuid");

                    b.Property<byte?>("DisputeSubType");

                    b.Property<byte?>("DisputeType");

                    b.Property<byte?>("DisputeUrgency");

                    b.Property<byte?>("EvidenceOverride");

                    b.Property<int?>("FileNumber");

                    b.Property<int?>("InitialPaymentBy");

                    b.Property<DateTime?>("InitialPaymentDate");

                    b.Property<bool?>("IsAmended");

                    b.Property<int?>("ModifiedBy");

                    b.Property<DateTime?>("ModifiedDate");

                    b.Property<DateTime?>("OriginalNoticeDate");

                    b.Property<bool?>("OriginalNoticeDelivered");

                    b.Property<int?>("OriginalNoticeId");

                    b.Property<int?>("PetDamageDepositAmount");

                    b.Property<string>("RentPaymentInterval")
                        .HasMaxLength(100);

                    b.Property<int?>("SecurityDepositAmount");

                    b.Property<int?>("SubmittedBy");

                    b.Property<DateTime?>("SubmittedDate");

                    b.Property<string>("TenancyAddress")
                        .HasMaxLength(80);

                    b.Property<string>("TenancyCity")
                        .HasMaxLength(50);

                    b.Property<string>("TenancyCountry")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("TenancyEndDate");

                    b.Property<byte?>("TenancyEnded");

                    b.Property<byte?>("TenancyGeozoneId");

                    b.Property<DateTime?>("TenancyStartDate");

                    b.Property<string>("TenancyZipPostal")
                        .HasMaxLength(7);

                    b.HasKey("DisputeId");

                    b.ToTable("Disputes");
                });

            modelBuilder.Entity("CM.Data.Model.DisputeStatus", b =>
                {
                    b.Property<int>("DisputeStatusId")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("DisputeGuid");

                    b.Property<int?>("DurationSeconds");

                    b.Property<int?>("Owner");

                    b.Property<byte?>("Process");

                    b.Property<byte?>("Stage");

                    b.Property<byte>("Status");

                    b.Property<string>("StatusNote")
                        .HasMaxLength(255);

                    b.Property<string>("StatusSetBy")
                        .HasMaxLength(100);

                    b.Property<DateTime>("StatusStartDate");

                    b.HasKey("DisputeStatusId");

                    b.HasIndex("DisputeGuid");

                    b.ToTable("DisputeStatuses");
                });

            modelBuilder.Entity("CM.Data.Model.DisputeStatus", b =>
                {
                    b.HasOne("CM.Data.Model.Dispute", "Dispute")
                        .WithMany("DisputeStatuses")
                        .HasForeignKey("DisputeGuid")
                        .HasPrincipalKey("DisputeGuid")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
